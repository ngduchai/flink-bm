Bootstrap: docker
From: ubuntu:22.04

%files
/home/ndhai/diaspora/zip/flink-2.0.0-bin-scala_2.12.tgz /opt/src/flink.tgz

%post
# Run the whole post section with bash so we can use -o pipefail, -u, etc.
bash -euxo pipefail <<'BASH'
  # --- OS deps ---
  apt-get update
  apt-get install -y --no-install-recommends \
      ca-certificates curl bzip2 \
      openjdk-17-jre-headless \
      mpich libmpich-dev \
      libhdf5-mpich-dev libhdf5-dev zlib1g-dev \
      libboost-serialization-dev \
      python3 python3-pip python3-venv
  rm -rf /var/lib/apt/lists/*

  # --- Flink ---
  mkdir -p /opt && cd /opt
  tar -xzf /opt/src/flink.tgz -C /opt
  ln -s /opt/flink-2.0.0 /opt/flink

  # --- micromamba + conda env for tomopy ---
  MAMBA_ROOT=/opt/micromamba
  ENV_PREFIX=$MAMBA_ROOT/envs/aps
  mkdir -p /tmp/mamba-bin
  curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest \
    | tar -xj -C /tmp/mamba-bin bin/micromamba

  # Create env with NumPy 1.24.x (compatible with Beam 2.54) to avoid ABI issues
  /tmp/mamba-bin/bin/micromamba create -y -p "$ENV_PREFIX" -c conda-forge \
      python=3.10 \
      numpy=1.24.* \
      h5py=3.9.* \
      tomopy \
      dxchange \
      scipy \
      scikit-image \
      astropy \
      olefile \
      pandas=2.1.* \
      pyarrow=14.0.*

  # --- Python deps for PyFlink (pin compatible set) ---
  "$ENV_PREFIX/bin/python" -m pip install --no-cache-dir --upgrade pip

  # 1) Install Flink Python API without transitive deps
  "$ENV_PREFIX/bin/python" -m pip install --no-cache-dir "apache-flink==2.0.0" --no-deps

  #    Install the dependencies that Flink expects (since we used --no-deps)
  "$ENV_PREFIX/bin/python" -m pip install --no-cache-dir \
      "apache-flink-libraries==2.0.0" \
      "avro>=1.12.0" \
      "pemja==0.4.1" \
      "py4j==0.10.9.7" \
      "ruamel.yaml>=0.18.4"

  # 2) Beam/serialization stack that works with Flink 2.0
  "$ENV_PREFIX/bin/python" -m pip install --no-cache-dir \
      "apache-beam==2.54.0" \
      "protobuf==3.20.3" \
      "cloudpickle==2.2.1" \
      "proto-plus<2.0.0" \
      "grpcio<1.63"

  # Guardrail: keep NumPy on 1.x (Beam 2.54 requires <1.25)
  "$ENV_PREFIX/bin/python" -m pip install --no-cache-dir --upgrade "numpy<1.25"

  # 3) Other essential packages
  "$ENV_PREFIX/bin/python" -m pip install --no-cache-dir \
      build pybind11 setuptools wheel flatbuffers

  # (Optional) quick versions print to help debug at build time
  "$ENV_PREFIX/bin/python" - <<'PY'
import pkg_resources as pr
pkgs = ["numpy","pandas","pyarrow","h5py","tomopy","dxchange",
        "apache-flink","apache-flink-libraries","apache-beam",
        "protobuf","cloudpickle","proto-plus","grpcio","pemja","py4j","avro","ruamel.yaml"]
for p in pkgs:
    try:
        print(f"{p}=={pr.get_distribution(p).version}")
    except Exception as e:
        print(f"{p} not installed: {e}")
PY
BASH

%environment
    export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    export FLINK_HOME=/opt/flink
    export PATH=$FLINK_HOME/bin:/opt/micromamba/envs/aps/bin:$PATH
    export PYTHON=/opt/micromamba/envs/aps/bin/python
    export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib/x86_64-linux-gnu/hdf5/mpich:$LD_LIBRARY_PATH
